========================   {{      Vault SAP story starts            }}=====================
                                
           Acronym SAP is Not official one - It is custom creation to learn and remember


S= Secrets engines
A= Access/Authentication methods
P= Policies

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Agenda:-
-------
What is Secret engine?
Different secret engines enabling, configuration ?


1. KV-V1
2. KV-V2
3. Transit
4. AWS
5. Database
6. PKI
7. SSH
8. Cubbyhole
9. Identity
10.Sys                    
11. Azure
12. Consul
13. Nomad
14. RabbitMQ
15. Kubernetes
16. LDAP
17. TOTP


1.KV-V1
========
# --------------------------------------------------------------------------------------------------------------
# Vault KV-v1 Secrets Engine Operations: Enable, Write, Read, List, Update, Move, Tune, Delete, Disable
# ---------------------------------------------------------------------------------------------------------------

# -----------------
# Enable KV v1
# -----------------
vault secrets enable kv                                         # Enable KV v1 at default path 'kv/'
vault secrets enable -path=test kv                              # Enable KV v1 at custom path 'test/'
vault secrets enable -version=1 -path=test1 kv                  # Explicitly enable KV v1 at path 'test1/'
vault write sys/mounts/api-kv type=kv options=version=1         # Enable KV v1 at 'api-kv/' using the API-style CLI

# -----------------
# Write secrets
# -----------------
vault kv put test/secret username=guru password=test@123        # Write key-values to 'test/secret' using kv command
vault write test/secret URL=https://test.com                    # Write secret to 'test/secret' using raw write
vault write test/secret test=done1 test=done2 test=done3        # Write last 'test=done3' (overwrites previous) to 'test/secret' in array

# -----------------
# Read secrets
# -----------------
vault kv get test/secret                                        # Get secret from 'test/secret' using kv command
vault read test/secret                                          # Read secret from 'test/secret' (raw API-style)
vault read sys/mounts/test/secret                               # Read engine mount configuration (not secret data)

# -----------------
# List secrets
# -----------------
vault kv list test                                              # List keys under path 'test/'
vault list kv
# -----------------
# Update secrets
# -----------------
vault kv put test/secret test=done                              # Overwrite entire secret with new data
vault write test/secret test=done1                              # Same as above using generic write command

# -----------------
# Move secrets engine
# -----------------
vault secrets move test test-new                                # Move secrets engine from 'test/' to 'test-new/'

# -----------------
# Tune secrets engine
# -----------------
vault secrets tune -description="Newly migrated secret engine" test-new   # Update the description of 'test-new/' mount

# -----------------
# Delete secrets
# -----------------
vault kv delete test-new/azure                                  # Permanently delete secret at 'test-new/azure' (KV v1)
vault delete test-new/aws                                       # Same as above using raw delete

# -----------------
# Disable secrets engine
# -----------------
vault secrets disable test1                                     # Disable (unmount) the secrets engine at 'test1/'
```




2. KV-V2:-
===========
# ---------------------------------------------------------------------------------------------------------------------
# Vault KV-v2 Secrets Engine Operations: Enable, Write, Read, List, Update, Patch, Move, Tune, Delete, undelete, rollback, metasdata, Disable
# ---------------------------------------------------------------------------------------------------------------------

# -----------------
# Enable KV v2
# -----------------
vault secrets enable kv-v2                                          # Enable KV v2 at default path 'kv-v2/'
vault secrets enable -path=test-cli kv-v2                           # Enable KV v2 at custom path 'test-cli/'
vault secrets enable -version=2 -path=test1-cli kv                  # Enable KV v2 explicitly using kv + version=2
vault write sys/mounts/api-kv-cli type=kv options=version=2         # Enable KV v2 via API-style CLI command

# -----------------
# Write secrets
# -----------------
vault kv put test-cli/secret username=guru password=test@123        # Write key-values to 'test-cli/secret' using kv put

# secret.json
# {
#   "data": {
#     "URL": "new-url"
#   }
# }
vault write test-cli/data/secret @secret.json                       # Write secret using raw KV v2 API structure

# -----------------
# Read secrets
# -----------------
vault kv get test-cli/secret                                        # Get the latest version of the secret using kv command
vault read test-cli/data/secret                                     # Read raw secret data via KV v2 API
vault read sys/mounts/test-cli/data/secret                          # Read the mount config (not secret data)

# -----------------
# List secrets
# -----------------
vault kv list test-cli                                              # List keys under 'test-cli/' (KV v2 auto-handled)

# -----------------
# Update or Modify secrets
# -----------------
vault kv put test-cli/secret test=done                              # Overwrite or update secret at 'test-cli/secret'

# secret.json
# {
#   "data": {
#     "URL": "new-url"
#   }
# }
vault write test-cli/data/secret @secret.json                       # Update secret using raw JSON body for KV v2

# -----------------
# Patch secrets (merge without overwrite)
# -----------------
vault kv patch -mount=test-cli secret bar=baz                       # Merge new key 'bar' without deleting existing ones
vault kv get test-cli/secret                                        # Confirm patched data is present

# -----------------
# Move secrets engine
# -----------------
vault secrets move test-cli test-new-cli                            # Move the entire KV v2 engine from one path to another

# -----------------
# Tune secrets engine
# -----------------
vault secrets tune -description="Newly migrated secret engine" test-new-cli   # Add or update metadata for the mount

# -----------------
# Delete secrets
# -----------------
vault kv delete test-new-cli/azure                                  # Soft-delete the latest version of a secret
vault delete test-new-cli/data/aws                                  # Delete raw KV v2 data path (not preferred method)

# -----------------
# Undelete specific versions
# -----------------
vault kv undelete -versions=1 test-new-cli/azure                   # Restore soft-deleted version 1 of the secret

# -----------------
# Destroy specific versions (permanently)
# -----------------
vault kv destroy -versions=1 test-new-cli/azure                    # Permanently delete version 1 of the secret

# -----------------
# Delete all versions and metadata permanently
# -----------------
vault kv metadata delete test-new-cli/azure                        # Permanently delete all versions and metadata of the secret

     
Note:- In Vault KV v2, you cannot delete metadata for a specific version only â€” metadata is tied to the entire secret, not individual versions.
====

# Set the maximum number of versions to retain for 'test-cli/secret' to 20
vault kv metadata put -max-versions=20 test-cli/secret


# Roll back 'test-cli/secret' to version 3 (creates a new version with old data)
vault kv rollback -version=3 test-cli/secret

# Read metadata and version history for 'secret' under 'new-test-cli' mount
vault read new-test-cli/metadata/secret

# Fetch secret metadata from 'new-test-cli' mount using kv metadata command
vault kv metadata get -mount=new-test-cli secret


# -----------------
# Disable secrets engine
# -----------------
vault secrets disable test1-cli-1                                   # Disable (unmount) the KV v2 engine at 'test1-cli-1/'

